diff --git a/apps/shares/api_urls.py b/apps/shares/api_urls.py
index e69de29..eeab060 100644
--- a/apps/shares/api_urls.py
+++ b/apps/shares/api_urls.py
@@ -0,0 +1,9 @@
+from django.conf.urls import url, patterns
+
+from .api_views import ShareListAPIView, ShareRecordListAPIView
+
+urlpatterns = patterns(
+    '',
+    url(r'^$', ShareListAPIView.as_view(), name='api-share-list'),
+    url(r'^records/(?P<pk>[\w-]+)$', ShareRecordListAPIView.as_view(), name='api-record-list'),
+)
diff --git a/apps/shares/api_views.py b/apps/shares/api_views.py
index 2c6044d..38e6fbf 100644
--- a/apps/shares/api_views.py
+++ b/apps/shares/api_views.py
@@ -1,21 +1,27 @@
-from rest_framework import generics, serializers, routers
+from rest_framework import generics, serializers
 
 from .models import Share, ShareRecord
 
 
-class ShareSerializer(serializers.HyperlinkedModelSerializer):
+class ShareRecordSerializer(serializers.HyperlinkedModelSerializer):
     class Meta:
         model = ShareRecord
         fields = ('date', 'open', 'close', 'low', 'close', 'volume')
 
 
+class ShareSerializer(serializers.HyperlinkedModelSerializer):
+    class Meta:
+        model = Share
+        fields = ('name', 'visible_name', 'updated_daily')
+
+
 class ShareListAPIView(generics.ListAPIView):
     serializer_class = ShareSerializer
     queryset = Share.objects.all()
 
 
 class ShareRecordListAPIView(generics.ListAPIView):
-    serializer_class = ShareSerializer
+    serializer_class = ShareRecordSerializer
 
     def get_queryset(self):
         return ShareRecord.objects.filter(share__pk=self.kwargs['pk'])
diff --git a/apps/shares/models.py b/apps/shares/models.py
index e98895c..07dbdb5 100644
--- a/apps/shares/models.py
+++ b/apps/shares/models.py
@@ -3,10 +3,11 @@ from django.db import models
 
 class Share(models.Model):
     name = models.CharField(max_length=32)
+    visible_name = models.CharField(max_length=64, null=True)
     updated_daily = models.BooleanField(default=False)
 
     def __str__(self):
-        return self.name
+        return self.visible_name if self.visible_name else self.name
 
 
 class ShareRecord(models.Model):
diff --git a/apps/shares/urls.py b/apps/shares/urls.py
index 29db45e..1a57ce7 100644
--- a/apps/shares/urls.py
+++ b/apps/shares/urls.py
@@ -1,12 +1,15 @@
 from django.conf.urls import url, patterns
 
-from .views import ShareListView, GroupCreateView, GroupListView, GroupDeleteView, GroupUpdateView
+from .views import (ShareListView, ShareUpdateView, ShareRecordListView,
+                    GroupCreateView, GroupListView, GroupDeleteView, GroupUpdateView)
 
 urlpatterns = patterns(
     '',
     url(r'^$', ShareListView.as_view(), name='share-list'),
-    url(r'groups/list$', GroupListView.as_view(), name='group-list'),
-    url(r'groups/create$', GroupCreateView.as_view(), name='group-create'),
-    url(r'groups/update/(?P<pk>[\w-]+)$', GroupUpdateView.as_view(), name='group-update'),
-    url(r'groups/delete/(?P<pk>[\w-]+)$', GroupDeleteView.as_view(), name='group-delete'),
+    url(r'^update/(?P<pk>[\w-]+)$', ShareUpdateView.as_view(), name='share-update'),
+    url(r'^records/(?P<pk>[\w-]+)$', ShareRecordListView.as_view(), name='record-list'),
+    url(r'^groups/list$', GroupListView.as_view(), name='group-list'),
+    url(r'^groups/create$', GroupCreateView.as_view(), name='group-create'),
+    url(r'^groups/update/(?P<pk>[\w-]+)$', GroupUpdateView.as_view(), name='group-update'),
+    url(r'^groups/delete/(?P<pk>[\w-]+)$', GroupDeleteView.as_view(), name='group-delete'),
 )
diff --git a/apps/shares/views.py b/apps/shares/views.py
index 4e1163a..1602138 100644
--- a/apps/shares/views.py
+++ b/apps/shares/views.py
@@ -2,7 +2,7 @@ from django.views.generic.list import ListView
 from django.views.generic.edit import CreateView, DeleteView, UpdateView
 from django.core.urlresolvers import reverse_lazy
 from braces.views import LoginRequiredMixin
-from .models import Share, ShareGroup
+from .models import Share, ShareRecord, ShareGroup
 
 
 class ShareListView(LoginRequiredMixin, ListView):
@@ -10,6 +10,22 @@ class ShareListView(LoginRequiredMixin, ListView):
     template_name = 'shares/share_list.html'
 
 
+class ShareUpdateView(LoginRequiredMixin, UpdateView):
+    model = Share
+    template_name = 'shares/share_update.html'
+    fields = ['visible_name', 'updated_daily']
+    success_url = reverse_lazy('shares:share-list')
+
+
+class ShareRecordListView(LoginRequiredMixin, ListView):
+    model = ShareRecord
+    template_name = 'shares/share_record_list.html'
+
+    def get_queryset(self):
+        qs = super(ShareRecordListView, self).get_queryset()
+        return qs.filter(share__pk=self.kwargs['pk'])
+
+
 class GroupListView(LoginRequiredMixin, ListView):
     model = ShareGroup
     template_name = 'shares/groups/group_list.html'
diff --git a/apps/updater/updater.py b/apps/updater/updater.py
index f9c15a1..1999b6b 100644
--- a/apps/updater/updater.py
+++ b/apps/updater/updater.py
@@ -77,11 +77,15 @@ class Updater(metaclass=Singleton):
         return ShareRecord(share=share, date=date, open=cols[2], high=cols[3],
                            low=cols[4], close=cols[5], volume=cols[6])
 
-    @classmethod
-    def update_share(cls, file_name, db_type):
-        share_name = os.path.splitext(file_name)[0]
-        share = Share.objects.update_or_create(name=share_name)[0]
-        return share
+    def update_share(self, path_name, file_name):
+        with open(os.path.join(path_name, file_name), 'r') as f:
+            f.readline()
+            share_name = os.path.splitext(file_name)[0]
+            share = Share.objects.update_or_create(name=share_name)[0]
+            ShareRecord.objects.bulk_create([self.get_record_from_line(share, line) for line in f.readlines()])
+        self.update_status['processing']['current'] += 1
+        self.update_status['processing']['percent'] = round(self.update_status['processing']['current']
+                                                            / self.update_status['processing']['total'] * 100)
 
     def process_files(self, dirs):
         self.update_status['processing']['action'] = 'parsing files'
@@ -90,13 +94,7 @@ class Updater(metaclass=Singleton):
         ShareRecord.objects.all().delete()
         for db_type, path_name in dirs.items():
             for file_name in os.listdir(path_name):
-                with open(os.path.join(path_name, file_name), 'r') as f:
-                    f.readline()
-                    share = self.update_share(file_name, db_type)
-                    ShareRecord.objects.bulk_create([self.get_record_from_line(share, line) for line in f.readlines()])
-                self.update_status['processing']['current'] += 1
-                self.update_status['processing']['percent'] = round(self.update_status['processing']['current']
-                                                                    / self.update_status['processing']['total'] * 100)
+                self.update_share(path_name, file_name)
 
     def clean_up(self, dl_files, dl_dirs):
         self.update_status['processing']['action'] = 'cleaning up'
diff --git a/requirements.txt b/requirements.txt
index 72232d7..5fe60bf 100644
--- a/requirements.txt
+++ b/requirements.txt
@@ -1,5 +1,6 @@
 django
 django-braces
 django-widget-tweaks
+djangorestframework
 psutil
 wget
diff --git a/settings.py b/settings.py
index 141e9d1..a9ea9f1 100644
--- a/settings.py
+++ b/settings.py
@@ -23,6 +23,7 @@ INSTALLED_APPS = (
     'django.contrib.messages',
     'django.contrib.staticfiles',
     'widget_tweaks',
+    'rest_framework',
     'apps.shares',
     'apps.stats',
 )
@@ -38,6 +39,12 @@ MIDDLEWARE_CLASSES = (
     'django.middleware.security.SecurityMiddleware',
 )
 
+REST_FRAMEWORK = {
+    'DEFAULT_PERMISSION_CLASSES': [
+        'rest_framework.permissions.DjangoModelPermissionsOrAnonReadOnly'
+    ]
+}
+
 ROOT_URLCONF = 'urls'
 TEMPLATES = [
     {
diff --git a/templates/shares/share_list.html b/templates/shares/share_list.html
index ba67964..9d678a8 100644
--- a/templates/shares/share_list.html
+++ b/templates/shares/share_list.html
@@ -8,13 +8,15 @@
             <tr>
                 <th>Name</th>
                 <th>Groups</th>
+                <th>Update</th>
             </tr>
         </thead>
         <tbody>
         {% for share in object_list %}
             <tr>
-                <td>{{ share.name }}</td>
-                <td>duuupa</td>
+                <td><a href="{% url 'shares:record-list' share.pk %}">{{ share }}</a></td>
+                <td>{{ share.groups }}</td>
+                <td><a href="{% url 'shares:update' share.pk %}" class="btn btn-block btn-info">Edit</a></td>
             </tr>
         {% endfor %}
         </tbody>
diff --git a/templates/shares/share_record_list.html b/templates/shares/share_record_list.html
index cd6a196..33eae0a 100644
--- a/templates/shares/share_record_list.html
+++ b/templates/shares/share_record_list.html
@@ -1,10 +1,10 @@
-{% extends 'base.html' %}
+{% extends 'navbar.html' %}
 
+{% block headertext %}Share januszpol{% endblock headertext %}
 {% block content %}
-    <h1>{% Share %}</h1>
     <ul>
-    {% for share in object_list %}
-        <li>{{ share.name }}</li>
+    {% for record in object_list %}
+        <li>{{ record.close }}</li>
     {% empty %}
         <li>No shares yet.</li>
     {% endfor %}
diff --git a/templates/shares/share_update.html b/templates/shares/share_update.html
index e69de29..bc228ae 100644
--- a/templates/shares/share_update.html
+++ b/templates/shares/share_update.html
@@ -0,0 +1,15 @@
+{% extends 'navbar.html' %}
+{% load widget_tweaks %}
+
+{% block headertext %}Update share{% endblock headertext %}
+{% block content %}
+    <div class="col-sm-6 col-md-4 col-md-offset-4">
+        <form class="form-horizontal well" method="post" action="">
+            {% csrf_token %}
+            {% render_field form.visible_name placeholder="Visible name" class+="form-control" %}
+            {{ form.visible_name.errors }}
+            <p>{% render_field form.updated_daily %}<label for="id_updated_daily">Updated daily?</label></p>
+            <button class="btn btn-lg btn-primary btn-block" type="submit">Update</button>
+        </form>
+    </div>
+{% endblock %}
\ No newline at end of file
diff --git a/templates/updater/update.html b/templates/updater/update.html
index 8ddf349..c4081e6 100644
--- a/templates/updater/update.html
+++ b/templates/updater/update.html
@@ -48,13 +48,13 @@
             <div class="list-group-item">
                  <div>
                     <div class="col-sm-8">
-                        <strong>Processing progress. Currently <span id="processing_action_div"></span>...</strong>
+                        Processing progress. <strong>Currently <span id="processing_action_div"></span>...</strong>
                     </div>
                     <div class="text-right">
                         <span class="label label-info">
                             <span id="processing_current_div"></span>
                             /
-                            <span id="processing_total_div"></span>
+                            <span id="processing_total_div"></span> files
                         </span>
                     </div>
                 </div>
diff --git a/urls.py b/urls.py
index 2bcaf0e..2d002e0 100644
--- a/urls.py
+++ b/urls.py
@@ -3,14 +3,20 @@ from django.contrib import admin
 from django.contrib.auth import views
 
 from apps.shares import urls as shares_urls
+from apps.shares import api_urls as shares_api_urls
 from apps.stats import urls as stats_urls
 from apps.updater import urls as updater_urls
 
 urlpatterns = [
     url(r'^admin/', include(admin.site.urls)),
+    url(r'^api-auth/', include('rest_framework.urls', namespace='rest_framework')),
+
     url(r'^accounts/login/$', views.login),
     url(r'^accounts/logout/$', views.logout, {'next_page': '/'}),
+
+    # apps
     url(r'', include(shares_urls, namespace='shares')),
+    url(r'^api/', include(shares_api_urls, namespace='api-shares')),
     url(r'^updater/', include(updater_urls, namespace='updater')),
     url(r'^stats/', include(stats_urls, namespace='stats')),
 ]
